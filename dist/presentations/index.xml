<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mikołaj Młodzikowski DevOps presentations</title>
    <link>https://mlodzikowski.pl/presentations/</link>
    <description>Recent content on Mikołaj Młodzikowski DevOps presentations</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://mlodzikowski.pl/presentations/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/jenkins/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/jenkins/1/</guid>
      <description>How to CI/CD with Jenkins? table of content  🌟 Groovy - a bit of shiny tricks in scripting 🔨 Jenkins - introduction to pipelines hydrualics 
emoji legend  📌 - pins are used in the wide context to present focus of the presentation 📖 - link to source article which covers more details in the presented area ❗ - important information to notify 
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/jenkins/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/jenkins/2/</guid>
      <description>🌟 Groovy - a bit of shiny tricks in scripting  theory - language specification some snippets in practice 
tell about primitive types and their relation to java tell about jenkins usecases for static typing python, ruby 1 + &amp;lsquo;1&amp;rsquo; -&amp;gt; error groovy 1 + &amp;lsquo;1&amp;rsquo; -&amp;gt; &amp;lsquo;11&amp;rsquo;, because of dynamic typing on tell about python/ruby AST vs Java compability (duck typing vs casting)
  🥜 (Apache) Groovy in nutshell 🥜   groovy is complex: object-oriented, functional 📌, java syntax libraries compatible 📌 (and syntax)  is able to mix features of dynamically 📌 and statically typed language at the same time Abstract Syntax Tree features: operators overloading, native syntax for lists and associative arrays (maps), native support for regular expressions, polymorphic iteration, string interpolation and the safe navigation operator ?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/jenkins/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/jenkins/3/</guid>
      <description>Jenkins - introduction to pipelines hydrualics Jobs management Extensions Infrastructure 
Job types Freestyle Pipelines DSL Multibranch 
Extensions Plugins Libraries UI tweaks 
Infrastructure Bare metals CCA VMs On demand VMs Containers Serverless 
 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/1/</guid>
      <description>Parę słów o programowaniu  Mikołaj Młodzikowski</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/2/</guid>
      <description>Kim jestem?  Pracuję jako programista do spraw budowy aplikacji w firmie Egnyte. Skończyłem Politechnikę Poznańską, prywatnie fan jazdy na rowerze, papug i gier komputerowych. </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/3/</guid>
      <description>Zawody w IT  Dev (Developer)  Frontend - warstwa wizualana Backend - warstwa logiczna Fullstack - połączenie obu   Tester - QA (Quality Assurance)  Manualny Automatyczny Procesowy   
Zawody w IT  Ops (Operations)  Administratorzy Systemów Zarządzanie dostepami i narzedziami Wsparcie sprzętowe   HR (Human Relations)  Specjaliści ds. rekrutowania Zarządzanie biurem Organizaja kultury firmy   
Zawody w IT  Administracja  Finanse Koordynacja życia w biurze Planowanie urlopów   Menadżerzy  Menadżer projektu Menadżer Produktu Menadżer menadżerów&amp;hellip; ;)</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/4/</guid>
      <description>Fakty i mity o programistach  Jest osobą zamkinętą w sobie i cichą FAŁSZ Umie dobrze matematykę PÓŁ PRAWDA Umie włamać się na fejsbuka FAŁSZ Naprawi zepsuty komputer FAŁSZ Istnieją ślepi programiści PRAWDA</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/5/</guid>
      <description>Jakie cechy powinien posiadać programista  Umiejętność pracy w zespole Chęć do nauki oraz rozwoju Znajomość języka angielskiego Kreatywność, rozwiązywanie problemów, zrozumienie drugiego człowieka  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/6/</guid>
      <description>Kilka ciekawostek o programistach  18% Aktywnych zawodowo programistów to studenci Prawie połowa programistów aktywnie wspiera wolne oprogramowanie 80% Programistów uważa swoją kodowanie za swoje hobby 35% Aktywnych zawodowo programistów ma mniej niż 5 lat doświadczenia  I 57% ma mniej niż 5 lat doświadczenia w zawodzie 
Kilka ciekawostek o programistach  27% Nie uzyskało wyższego wykształcenia 46% Ma wykształcenie wyższe I stopnia 63% Skończyło informatykę Pozostałe popularne kierunki to: inne kierunki techniczne, administracja, chemia, biologia, fizyka, matematyka, ekonomia 86% Przyznaje że większości rzeczy nauczyła się w domu</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/7/</guid>
      <description>Algorytmika  Nudna regułka: zadaniem algorytmu jest przeprowadzenie systemu z pewnego stanu początkowego do pożądanego stanu końcowego  Na chłopski rozum: Jest to wymyślenie i zapisanie sposobu jak doprowadzić coś z punktu A do punktu B  Jest wiele rodzajów algorytmów: zachłanne, sztucznej inteligencji, genetyczne  
Algorytmika - algorytm parzenia herbaty  Nalej wody do czajnika Wstaw czajnik Przygotuj szklanke Wsadź torebkę do szklanki Poczekaj aż woda się zaparzy Zalej herbate Dosyp cukru Zamieszaj Wypij</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/8/</guid>
      <description>Podstawy programowania  Wszystko numerujemy od 0, a &amp;lsquo;okrągłe liczby&amp;rsquo; to potęgi 2  Zmienne, np: x=1, albo x=&amp;ldquo;czesc&amp;rdquo;  Warunki, np: if x==2: print(&amp;lsquo;Hello&amp;rsquo;)  
Podstawy programowania  Pętle liczące, np: for x in range(10): print(x)  Pętle warunkow, np: while(x &amp;lt; 10): print(x) and x = x + 1  Naukę zaczynamy od prostych rzeczy: tradycją jest zrobienie programu który napisze na ekranie &amp;lsquo;hello world&amp;rsquo;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/programming/9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/programming/9/</guid>
      <description>Dziękuję za uwagę! Czas na część praktyczną :) online @ https://mlodzikowski.pl/presentations/programming Filmiki i linki dla ciekawskich:   Zbiór materiałów  do nauki pythona w sieci oraz interaktywny kurs online od podstaw po polsku.   Książki do pythona: python z minecraftem , python na start  i Laura Ipsum , odpowiednik książki &#34;Świat Zofii&#34; w Informatyce.     Linda Lukas z Finlandii opowiada o tym jak uczy programować  najmłodszych (eng)   Thomas Suarez (12 lat) z USA opowiada o tym jak został programistą  (eng)   Materiały do programowania z prelekcji     Film o Denisie, ślepym programiście   Strona z grami do nauki programowania i algorytmiki, tynker i codecombat    </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/0/</guid>
      <description>SysOps/DevOps Poznań MeetUp #5  Mikołaj Młodzikowski</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/1/</guid>
      <description>root@sodo-meetup # whoami    My name is Miko, my interests are: lingustics, travels and programing  I&amp;rsquo;m going to start soon my career as a Build Automation Engineer, previously Java Developer and DevOps  
 root@sodo-meetup # uname -a    This presentations is focused on popularizing IaC approach using terraform as an example  Terraform will be broadly presented as a tool with mostly easy examples  Presentation is full of links, sources and referals so if you are interested in the topic - check out later the presentation online    root@sodo-meetup # terraform plan -out=introduction    Infrastructure as Code - short summary  Terraform features specification  HCL together with &amp;ldquo;${interpolation}&amp;rdquo;  Modules and community tools  Snippets!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/2/</guid>
      <description>IaC Approach 📖 Wikipedia definiton:  Infrastructure as code (IaC) is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools.   A good starting article about IaC from thorntech  
Pros Operations:  Infrastructure is self-documentating by its code  Configuration can become part of Continuous Configuration Automation  Keeping IaC inside VCS: changes tracking, easier rollbacks and reviewing process</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/3/</guid>
      <description>Facts about terraform  Is declarative -&amp;gt; tell what you want  Uses push configuration method  Communication is JSON based  Is extendable by plugins written in Golang   Digest of the providers set  Clouds: AWS, GCP, Azure, Alibaba, DigitalOcean, Heroku, OpenStack  Monitors: Datadog, Grafana, Icinga, New Relic, PagerDuty  Software: Docker, Nomad, Consul, Vault, Chef, Kubernetes  Networks: Cloudflare, DNS Servers, HTTP Requests  Databases, scripts, archives, vcs, many more&amp;hellip;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/4/</guid>
      <description>HCL &amp;amp;&amp;amp; &amp;ldquo;${interpolation}&amp;rdquo;  HCL is compromise between human-friendly and machine-friendly configurations  HCL is fusion of complete programing languages and data structure languages  HCL is JSON-compatible - you can generate JSON and run it as HCL  HCL supports comments and &amp;lt;&amp;lt;EOF syntax for multiline strings.   Exact specification on the language can be found in the Hashicorps repository Data types  // vars: &amp;ldquo;${var.aws_account_number}&amp;rdquo; //(0.11) var.aws_account_number // (0.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/5/</guid>
      <description>What are terraform modules  Modules are blackbox configuration in which only some set of parameters is provided in aim to create more complex infrastructure behind the scenes.  Modules usually have a set of outputs which can be referenced in your terraform file.  
Using modules  First source is official terraform registry  You can also find terraform modules on git repositories. There are plenty of them.  If you don&amp;rsquo;t feel satisfied you can always create your own modules and reference them as local files  Module is normal terraform project with: main.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/6/</guid>
      <description>Thank you! online @ https://mlodzikowski.pl/presentations/terraform repo with snippets @ https://github.com/mkjmdski/terraform-examples Sources and helpful links to study terraform:  Jakub Jańczak article  pointing terraform cons  Alexander Savchuk post  on CCA   Pavan Belagatti&amp;rsquo;s analyze  on popularity of terraform   Two articles about terraform on AWS: provisioning AWS  by Manisha Sahasrabudhe and terraform ECS cluster  by Tom Trahan  
More helpful links   Hashicrop webinars on YT   Introduction to terraform from Gruntwork.</description>
    </item>
    
  </channel>
</rss>