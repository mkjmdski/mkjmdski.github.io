<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Miko≈Çaj M≈Çodzikowski DevOps presentations</title>
    <link>https://mlodzikowski.pl/presentations/</link>
    <description>Recent content on Miko≈Çaj M≈Çodzikowski DevOps presentations</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://mlodzikowski.pl/presentations/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/0/</guid>
      <description>SysOps/DevOps Polska - Pozna≈Ñ #5  Miko≈Çaj M≈Çodzikowski </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/1/</guid>
      <description> root@sodo-meetup # terraform plan -out=introduction    Infrastructure as Code - short summary Terraform features specification HCL - HashiCorp Configuration language &#34;${interpolation}&#34; features Using/Writting Modules Snippets!  root@sodo-meetup # terraform apply introduction   </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/2/</guid>
      <description>IaC Approach üìñ Wikipedia definiton:  Infrastructure as code (IaC) is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools.  A good starting article from thorntech

Pros ü§ì Operations:
 Infrastructure is self-documentating by its code  Configuration can become part of Continuous Configuration Automation Keeping IaC inside VCS: changes tracking, easier rollbacks and reviewing process</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mlodzikowski.pl/presentations/terraform/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mlodzikowski.pl/presentations/terraform/3/</guid>
      <description>Facts about terraform  Is declarative -&amp;gt; tell what you want Uses push configuration method Communication is JSON based (HCL Compilation) Extends by plugins written in Golang  Digest of the providers set  Clouds: AWS, GCP, Azure, Alibaba, DigitalOcean, Heroku, OpenStack Monitors: Datadog, Grafana, Icinga, New Relic, PagerDuty Software: Docker, Nomad, Consul, Vault, Chef, Kubernetes Networks: Cloudflare, DNS Servers, HTTP Requests Databases, scripts, archives, vcs, many more&amp;hellip; 
Terraform docs on providers</description>
    </item>
    
  </channel>
</rss>